package edu.kriogenik.infoloader.messaging.dto

/**
 * Класс типов, позволяющий производить конвертацию сущности в ее
 * представление для транспортировки и обратно.
 * @tparam A
 *           Тип внутренней сущности.
 * @tparam B
 *           Тип внешней сущности.
 */
trait Dto[A, B] {

  /**
   * Функция отображения внутреннего представления объекта в его
   * представление, предназначенного для транспортировки.
   * @param x
   *          Объект для преобразования.
   * @return
   *         Объект для транспортировки.
   */
  def toDto(x: A): B

  /**
   * Функция отображения представления для транспортировки в его
   * внутреннее представление.
   * @param x
   *          Объект для транспортировки.
   * @return
   *         Объект для внутреннего использования.
   */
  def fromDto(x: B): A

}

object Dto{

  /**
   * Функция для более удобного использования объекта класса типа.
   * Позволяет упростись получение объекта.
   * {{{
   * До:    implicitly[Dto[X, Y]].(...)
   * После: Dto[X, Y].(...)
   * }}}
   *
   * @param tc
   *         Реализация класса типа, получается неявно.
   * @tparam A
   *         Тип, для которого требуется получение реализации функтора.
   * @tparam B
   *         Тип, для которого требуется получение реализации функтора.
   * @return
   *         Реализацию нужного класса типа для данных типов.
   */
  def apply[A, B](implicit tc: Dto[A, B]): Dto[A, B] = tc

}
