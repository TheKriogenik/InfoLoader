package edu.kriogenik.infoloader.typeclasses

/**
 * Класс типов, позволяющий создавать объекты класса `T` по их строковому описанию.
 *
 * @tparam T
 *           Класс, имеющий возможность создания оного из строки.
 */
trait Read[T] {

  /**
   * Метод для получения объекта класса `T` из строки.
   * @param target
   *         Строка с информацией.
   * @return
   *         Объект класса T.
   */
  def read(target: String): T

}

/**
 * Объект-компаньон для более удобного использования данного класса типов.
 */
object Read{

  /**
   * Метод для удобного вызова объекта нужного класса типов.
   *
   * @param tc
   *          Объект класса типа для класса A, используется неявно.
   * @tparam A
   *           Класс, для которого реализован тип класса.
   * @return
   *         Объект класса типа для класса A.
   */
  def apply[A](implicit tc: Read[A]): Read[A] = tc

  /**
   * Неявный класс-расширение для использования возможностей класса типов
   * в ООП-стиле.
   * @param x
   *           Строка, для которой требуется применять методы-расширения.
   */
  implicit class ReadOps(x: String){

    /**
     * Метод для отображения строки в нужный тип.
     *
     * @tparam A
     *         Тип, в который требуется отображение.
     * @return
     *         Объект класса [[A]], соответствующий переданной строке.
     */
    def read[A: Read]: A = Read[A].read(x)
  }

}
